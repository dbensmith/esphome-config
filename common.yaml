esphome:
  name: ${name}
  friendly_name: ${area} ${friendly_name}
  name_add_mac_suffix: False
  area: $(area)

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: !secret wifi_domain
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${name} Fallback Hotspot"
    password: !secret fallback_hotspot_password

captive_portal:

# Disable web server if the device is underpowered or lacks resources
web_server:
  port: 80
  auth: 
    username: !secret web_server_username
    password: !secret web_server_password

sensor:
  - platform: uptime
    name: Uptime Sensor
    id: uptime_sensor
    internal: true
    disabled_by_default: false
    unit_of_measurement: s
    update_interval: 60s

text_sensor:
- platform: template
  name: Uptime
  lambda: !lambda |-
    int seconds = (id(uptime_sensor).state);
    int days = seconds / (24 * 3600);
    seconds = seconds % (24 * 3600);
    int hours = seconds / 3600;
    seconds = seconds % 3600;
    int minutes = seconds /  60;
    seconds = seconds % 60;
    if ( days > 3650 ) {
      return { "Starting up" };
    } else if ( days ) {
      return { (String(days) +"d " + String(hours) +"h " + String(minutes) +"m "+ String(seconds) +"s").c_str() };
    } else if ( hours ) {
      return { (String(hours) +"h " + String(minutes) +"m "+ String(seconds) +"s").c_str() };
    } else if ( minutes ) {
      return { (String(minutes) +"m "+ String(seconds) +"s").c_str() };
    } else {
      return { (String(seconds) +"s").c_str() };
    }
  disabled_by_default: false
  update_interval: 60s
